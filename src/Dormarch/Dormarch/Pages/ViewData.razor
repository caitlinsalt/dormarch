@page "/view"
@using System.IO; 
@using Dormarch.OpenType;
@implements IDisposable;  
@inject Blazor.FileReader.IFileReaderService fileReaderService;

<h1>View File</h1>

<input type="file" @ref=fileSelectElement />
<button @onclick=ReadFile>Read file</button>

@if (font is null)
{
    <p><em>[no font loaded]</em></p>
}
else
{
    <p>@FontName()</p>
    <FontTableList Data=@font />
}
@code {
    private OpenTypeFont font;
    private ElementReference fileSelectElement;

    public async Task ReadFile()
    {
        foreach (var file in await fileReaderService.CreateReference(fileSelectElement).EnumerateFilesAsync())
        {
            if (font != null)
            {
                font.Dispose();
                font = null;
            }
            string fn = (await file.ReadFileInfoAsync()).Name;
            MemoryStream memoryStream = await file.CreateMemoryStreamAsync();
            font = new OpenTypeFont(memoryStream, fn);
            StateHasChanged();
        }
    }

    private string FontName()
    {
        if (font is null)
        {
            return "";
        }
        NameRecord psName = font.Naming.Search(NameField.PostScriptName).FirstOrDefault();
        if (psName is null)
        {
            psName = font.Naming.Search(NameField.Family).FirstOrDefault();
        }
        return psName?.Content;
    }

    public void Dispose()
    {
        font?.Dispose();
        font = null;
    }
}
